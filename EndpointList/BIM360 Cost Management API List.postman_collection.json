{
	"info": {
		"_postman_id": "65c54e71-4761-4f3c-b654-a9d2a93d6c70",
		"name": "BIM360 Cost Management API List",
		"description": "The collection together with the environment shows the whole list of the Endpoints which is released at 2020-01-17 as public beta.\n\nYou can refer to the https://forge.autodesk.com/en/docs/bim360/v1/overview/basics/ for the details about all these APIs.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Setup cost container id",
			"item": [
				{
					"name": "GET all hubs of your account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0400edee-9407-4539-a629-7f92f73ce24e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var responseBody = JSON.parse(responseBody);",
									"for ( var index in responseBody.data) {",
									"    console.log( index );",
									"    if(responseBody.data[index].id.indexOf(\"b.\") != -1){",
									"        postman.setEnvironmentVariable(\"hub_id\", responseBody.data[index].id);",
									"        postman.setEnvironmentVariable(\"account_id\", responseBody.data[index].id.split(\"b.\").join(\"\"));",
									"}",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET projects from a hub",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "511e384b-691e-40a2-9fe5-716e82dd7274",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// find the specified project and setup the environment variable \"project_id\"",
									"var project_name =  pm.environment.get(\"project_name\");",
									"var responseBody = JSON.parse(responseBody);",
									"for ( var index in responseBody.data) {",
									"    if(responseBody.data[index].attributes.name == project_name){",
									"        postman.setEnvironmentVariable(\"project_id\", responseBody.data[index].id);",
									"    }",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d0cd5145-8f97-47aa-a136-0c42d2309e11",
								"exec": [
									"var project_name =  pm.environment.get(\"project_name\");",
									"if( project_name == null || project_name == '' ){",
									"    pm.environment.set(\"project_name\", \"Change to your project name\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs/{{hub_id}}/projects",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs",
								"{{hub_id}}",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET project & setup cost container Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25d5a645-4c36-4dd6-82a9-3c26136f9985",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var responseBody = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"cost_container_id\", responseBody.data.relationships.cost.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs/{{hub_id}}/projects/{{project_id}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs",
								"{{hub_id}}",
								"projects",
								"{{project_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "70d36364-ec62-4920-9414-a295572f4209",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c97b5588-a555-4202-944f-74e9c2885266",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Budgets",
			"item": [
				{
					"name": "GET budgets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca31f576-be8a-4184-aa61-c0a1c63ca056",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"budget_id\", data.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/budgets",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"budgets"
							],
							"query": [
								{
									"key": "include",
									"value": "attributes,subitems",
									"disabled": true
								},
								{
									"key": "filter[rootId]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[id]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[code]",
									"value": "",
									"disabled": true
								},
								{
									"key": "order",
									"value": "id",
									"disabled": true
								}
							]
						},
						"description": "Returns all the budgets in a project."
					},
					"response": []
				},
				{
					"name": "GET\tbudgets/:budgetId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "750c4dfb-c950-4f16-99a0-c8bc8cb53064",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/budgets/{{budget_id}}?",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"budgets",
								"{{budget_id}}"
							],
							"query": [
								{
									"key": "include",
									"value": "subitems,attributes",
									"disabled": true
								},
								{
									"key": "filter[rootId]",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get a budget specified by ID."
					},
					"response": []
				},
				{
					"name": "PATCH\tbudgets/:budgetId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a71f75b-3983-4d4b-9698-b717db5e8353",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"code\": \"200420420845\",\n        \"name\": \"My updated budget\",\n        \"description\": \"budget description\",\n        \"quantity\": 50,\n        \"unitPrice\": \"1000.0000\",\n        \"unit\": \"LS\",\n        \"actualCost\": \"1000.0000\",\n        \"adjustments\": {\n          \"details\": [\n            {\n              \"quantity\": 2,\n              \"unitPrice\": 2,\n              \"unit\": \"MNTH\"\n            }\n          ]\n        }\n      }"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/budgets/{{budget_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"budgets",
								"{{budget_id}}"
							]
						},
						"description": "Update a budget."
					},
					"response": []
				},
				{
					"name": "POST budgets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46ec695e-7cdf-42c4-b69d-678f48fc65c7",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"budget_id\", data.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"parentId\": null,\n        \"code\": \"200420420348\",\n        \"name\": \"My budget name\",\n        \"description\": \"budget description\",\n        \"quantity\": 1,\n        \"unitPrice\": \"1000\",\n        \"unit\": \"LS\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/budgets",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"budgets"
							]
						},
						"description": "Create a budget in a given project."
					},
					"response": []
				},
				{
					"name": "DELETE\tbudgets/:budgetId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "764a55a6-02f5-4374-8307-c19818bdb1ba",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/budgets/{{budget_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"budgets",
								"{{budget_id}}"
							]
						},
						"description": "Delete a budget."
					},
					"response": []
				},
				{
					"name": "POST budgets:import",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3f15d13-d21d-4cc4-b166-1ab8be3e07f1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"budget_id\", data[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": [\n          {\n            \"parentId\": null,\n            \"code\": \"200420420833\",\n            \"name\": \"1st budget from import\",\n            \"quantity\": 10,\n            \"unitPrice\": 1000.0000,\n            \"unit\": \"m3\"\n          },\n          \n          {\n            \"parentId\": null,\n            \"code\": \"200420420843\",\n            \"name\": \"2nd budget from import\",\n            \"quantity\": 20,\n            \"unitPrice\": 2000.0000,\n            \"unit\": \"m3\"\n          }          \n    ],\n    \"append\": false\n}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/budgets:import",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"budgets:import"
							]
						},
						"description": "Import a list of budgets into a project chunk by chunk. Maximum amount per chunk is 50."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0fca396e-b28b-4c88-bf29-4321b8341e66",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "615c270f-22ba-4381-9314-ffeb7a45d1ed",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Contracts",
			"item": [
				{
					"name": "GET\tcontracts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfca5644-3012-4e47-af4d-9e20bf186a36",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"contract_id\", data.results[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/contracts?",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"contracts"
							],
							"query": [
								{
									"key": "include",
									"value": "attributes,budgets",
									"disabled": true
								}
							]
						},
						"description": "Returns all the contract in a project."
					},
					"response": []
				},
				{
					"name": "GET\tcontracts/:contractId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfca5644-3012-4e47-af4d-9e20bf186a36",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/contracts/{{contract_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"contracts",
								"{{contract_id}}"
							]
						},
						"description": "Gets a contract specified by ID."
					},
					"response": []
				},
				{
					"name": "PATCH contracts/:contractId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfca5644-3012-4e47-af4d-9e20bf186a36",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7e275243-a3b5-4484-862d-d6be21bd0d00",
								"exec": [
									"pm.environment.set(\"company_id\", \"change to your company id\");",
									"pm.environment.set(\"user_id\", \"change to your use id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"Your updated contract\",\n        \"code\":\"GCC09\",\n\t\t\"id\":\"{{contract_id}}\",\n        \"description\": \"contract is updated\",\n        \"companyId\": \"{{company_id}}\",\n        \"contactId\": \"{{user_id}}\",\n        \"budgets\": [{\n        \t\"id\":\"{{budget_id}}\"\n        \t}\n        ],\n        \"type\": \"Subcontract\",\n        \"signedBy\":\"{{user_id}}\",\n        \"ownerId\": \"{{user_id}}\"\n        \n}\n\n\n"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/contracts/{{contract_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"contracts",
								"{{contract_id}}"
							]
						},
						"description": "Patch Update a contract"
					},
					"response": []
				},
				{
					"name": "POST contracts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfca5644-3012-4e47-af4d-9e20bf186a36",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"contract_id\", data.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n        \"code\": \"Contract-1\",\n        \"name\": \"My 1st Contract\",\n        \"description\": \"Contract description\",\n        \"type\": \"consultant\",\n        \"budgets\": [\n        \t{ \n        \t\t\"id\": \"{{budget_id}}\"\n        \t}\n        ]\n}"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/contracts",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"contracts"
							]
						},
						"description": "Create a contract in a specific container."
					},
					"response": []
				},
				{
					"name": "DELETE\tcontracts/:contractId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfca5644-3012-4e47-af4d-9e20bf186a36",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/contracts/{{contract_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"contracts",
								"{{contract_id}}"
							]
						},
						"description": "Delete a contract item specified by ID."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Change Orders",
			"item": [
				{
					"name": "GET change-orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d16a9a4-c870-4cb6-9a45-f2c83c9916fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"changeOrder_type\", data[0].type);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/change-orders",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"change-orders"
							]
						},
						"description": "Get change order types."
					},
					"response": []
				},
				{
					"name": "GET change-orders/:changeOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d6d7bb5-1d9d-444c-bb67-a61ad8228445",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"changeOrder_id\", data.results[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/change-orders/{{changeOrder_type}}?",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"change-orders",
								"{{changeOrder_type}}"
							],
							"query": [
								{
									"key": "include",
									"value": "CostItem",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get change-orders/:changeOrder/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe4fb402-de8b-4fbc-ba03-71234776a73b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/change-orders/{{changeOrder_type}}/{{changeOrder_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"change-orders",
								"{{changeOrder_type}}",
								"{{changeOrder_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH change-orders/:changeOrder/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e15aa082-d4a9-4766-bb4b-a1e4a12a172c",
								"exec": [
									"pm.environment.set(\"recipient_id\", \"change to user id\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "21d4043f-733e-4959-a661-b152be7706e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\":\"update description\",\n\t\"name\":\"change order is updated\",\n\t\"recipients\": [\n    \t{\n            \"id\": \"{{recipient_id}}\",\n            \"isDefault\": false\n    \t}\n    ],\n    \"scopeOfWork\": \"updated scope of work\",\n    \"note\": \"updated note\"\n}"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/change-orders/{{changeOrder_type}}/{{changeOrder_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"change-orders",
								"{{changeOrder_type}}",
								"{{changeOrder_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST change-orders/:changeOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"changeOrder_id\", data.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"My 1st change order\",\n    \"description\": \"change order description\",\n    \"scopeOfWork\": \"scope of work\",\n    \"note\": \"note\"\n}"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/change-orders/{{changeOrder_type}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"change-orders",
								"{{changeOrder_type}}"
							]
						},
						"description": "Create a new change order (typically a PCO) to initiate a change."
					},
					"response": []
				},
				{
					"name": "DELETE change-orders/:changeOrder/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "959cdd5f-bf9c-4b85-84cc-87b7b757c601",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/change-orders/{{changeOrder_type}}/{{changeOrder_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"change-orders",
								"{{changeOrder_type}}",
								"{{changeOrder_id}}"
							]
						},
						"description": "Delete an existing change order"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cost Items",
			"item": [
				{
					"name": "GET cost-items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"costItem_id\", data.results[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/cost-items?",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"cost-items"
							],
							"query": [
								{
									"key": "include",
									"value": "changOrders",
									"disabled": true
								}
							]
						},
						"description": "List all the cost items in a specified project."
					},
					"response": []
				},
				{
					"name": "GET cost-items/:costItemId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/cost-items/{{costItem_id}}?include=changOrders",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"cost-items",
								"{{costItem_id}}"
							],
							"query": [
								{
									"key": "include",
									"value": "changOrders"
								}
							]
						},
						"description": "Get a cost item specified by ID. The returned item includes details."
					},
					"response": []
				},
				{
					"name": "PATCH cost-items/:costItemId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"Renamed\",\n        \"description\": \"updated cost item description\",\n        \"estimated\": \"9000.0000\",\n        \"proposed\": \"9000.0000\",\n        \"submitted\": \"9000.0000\",\n        \"approved\": \"9000.0000\",\n        \"committed\": \"9000.0000\"\n\t\n}"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/cost-items/{{costItem_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"cost-items",
								"{{costItem_id}}"
							]
						},
						"description": "Update an existing cost item"
					},
					"response": []
				},
				{
					"name": "POST cost-items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"costItem_id\", data.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"My 1st cost item\",\n        \"description\": \"1st cost item\",\n        \"estimated\": \"1000.0000\",\n        \"proposed\": \"1000.0000\",\n        \"submitted\": \"1000.0000\",\n        \"approved\": \"1000.0000\",\n        \"committed\": \"1000.0000\"\n}"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/cost-items",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"cost-items"
							]
						},
						"description": "Create a new cost item in a specific container."
					},
					"response": []
				},
				{
					"name": "DELETE cost-items/:costItemId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/cost-items/{{costItem_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"cost-items",
								"{{costItem_id}}"
							]
						},
						"description": "Delete an existing cost item."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Change Order and Cost Item",
			"item": [
				{
					"name": "POST cost-items:attach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n          \"changeOrderId\": \"{{changeOrder_id}}\",\n          \"costItemId\": \"{{costItem_id}}\"\n    }\n]"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/cost-items:attach",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"cost-items:attach"
							]
						},
						"description": "Add existing cost items to a change order."
					},
					"response": []
				},
				{
					"name": "POST cost-items:detach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n          \"changeOrderId\": \"{{changeOrder_id}}\",\n          \"costItemId\": \"{{costItem_id}}\"\n\t}\n]"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/cost-items:detach",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"cost-items:detach"
							]
						},
						"description": "Remove existing cost items from a change order."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Attachment",
			"item": [
				{
					"name": "POST attachment-folders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"folder_id\", data.id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7e0ba9a7-d18e-40e9-98e8-4af40c90e575",
								"exec": [
									"pm.environment.set(\"association_type\", \"change to your association type\");",
									"pm.environment.set(\"association_type\", \"change to your association id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"associationId\": \"{{association_id}}\",\n        \"associationType\": \"{{association_type}}\"\n}"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/attachment-folders",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"attachment-folders"
							]
						},
						"description": "Find or create an attachment folder in BIM 360 Docs for a given item. That folder will save local files as attachments to the item. Files are saved using the Storage service."
					},
					"response": []
				},
				{
					"name": "POST an attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"attachment_id\", data.id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "66e88806-7c0c-4c87-83d4-b64999c51042",
								"exec": [
									"pm.environment.set(\"attachment_urn\", \"change to your attachment urn\");",
									"pm.environment.set(\"association_type\", \"change to your association type\");",
									"pm.environment.set(\"association_id\", \"change to your association id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"My 1st attachment\",\n        \"folderId\": \"{{folder_id}}\",\n        \"urn\": \"{{attachment_urn}}\",\n        \"associationId\": \"{{association_id}}\",\n        \"associationType\": \"{{association_type}}\"\n}"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/attachments",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"attachments"
							]
						},
						"description": "Create an attachment in a specific container"
					},
					"response": []
				},
				{
					"name": "GET attachments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"attachment_id\", data[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/attachments?associationId={{association_id}}&associationType={{association_type}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"attachments"
							],
							"query": [
								{
									"key": "associationId",
									"value": "{{association_id}}"
								},
								{
									"key": "associationType",
									"value": "{{association_type}}"
								}
							]
						},
						"description": "Get all the attachments associated with an item such as a budget, contract, or cost item."
					},
					"response": []
				},
				{
					"name": "DELETE\tattachments/:attachmentId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.environment.unset(\"attachment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/attachments/{{attachment_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"attachments",
								"{{attachment_id}}"
							]
						},
						"description": "Delete a Attachment"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Attribute Definitions",
			"item": [
				{
					"name": "GET\tproperties",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"property_definition_id\", data[0].id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1efb7b78-9a9f-4e74-9465-8deeaabdcfa2",
								"exec": [
									"pm.environment.set(\"association_type\", \"change to your association type\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/properties?filter[category]={{association_type}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"properties"
							],
							"query": [
								{
									"key": "filter[category]",
									"value": "{{association_type}}"
								},
								{
									"key": "filter[name]",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "List all the attribute definitions created to define custom attributes for a given module."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Attribute Values",
			"item": [
				{
					"name": "POST property-values:batch-update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e0822579-6c94-49bb-9f92-ea0b6dbde2ae",
								"exec": [
									"pm.environment.set(\"property_value\", \"change to your property value\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n        {\n          \"associationType\":\"{{association_type}}\",\n          \"associationId\":\"{{association_id}}\",\n          \"propertyDefinitionId\": \"{{property_definition_id}}\",\n          \"value\": \"{{property_value}}\"\n        }\n]"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/property-values:batch-update",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"property-values:batch-update"
							]
						},
						"description": "Update the existing values of multi custom attributes associated with an item such as a cost item, PCO, and so on."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1a5116a8-8c27-457f-8136-77929e2ee339",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1b18ed42-ac67-423a-98ee-7d3590d7b4b0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Document",
			"item": [
				{
					"name": "GET\tdocuments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"document_id\", data[0].id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "94535971-fb94-4a0e-baa4-705b8a212949",
								"exec": [
									"pm.environment.set(\"association_type\", \"change to your association type\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/documents?associationId={{association_id}}&associationType={{association_type}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"documents"
							],
							"query": [
								{
									"key": "associationId",
									"value": "{{association_id}}"
								},
								{
									"key": "associationType",
									"value": "{{association_type}}"
								}
							]
						},
						"description": "Get generated documents."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "File Package",
			"item": [
				{
					"name": "GET\tfile-packages",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"file_package_id\", data[0].id);",
									"postman.setEnvironmentVariable(\"file_package_item_id\", data[0].items[0].id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "07909169-e5cf-4c30-bc4f-4515f674039e",
								"exec": [
									"pm.environment.set(\"association_type\", \"change to your association type\");",
									"pm.environment.set(\"association_id\", \"change to your association id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/file-packages?filter[associationType]={{association_type}}&filter[associationId]={{association_id}}",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"file-packages"
							],
							"query": [
								{
									"key": "filter[associationType]",
									"value": "{{association_type}}"
								},
								{
									"key": "filter[associationId]",
									"value": "{{association_id}}"
								},
								{
									"key": "filter[id]",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "Returns all the file packages in a specific container."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Actions",
			"item": [
				{
					"name": "GET\tactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// setup the environment variable \"action_name\"",
									"var responseBody = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"action_name\", responseBody[0].name);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/workflows/{{association_type}}/{{association-id}}/actions",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"workflows",
								"{{association_type}}",
								"{{association-id}}",
								"actions"
							]
						},
						"description": "List the actions that can execute on the specified item according to the item’s current state."
					},
					"response": []
				},
				{
					"name": "POST actions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a9e2af-0bc3-4d81-9bc4-9f4fa42fc1fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "47c330ee-ed27-4a44-a4aa-764be9bb9c27",
								"exec": [
									"pm.environment.set(\"association_type\", \"change to your association type\");",
									"pm.environment.set(\"association_id\", \"change to your association id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n      \"action\": \"{{action_name}}\",\n      \"associationId\": \"{{association_id}}\",\n      \"associationType\": \"{{association_type}}\",\n      \"options\": {}\n    }\n]"
						},
						"url": {
							"raw": "{{base_domain}}cost/v1/containers/{{cost_container_id}}/workflows/actions",
							"host": [
								"{{base_domain}}cost"
							],
							"path": [
								"v1",
								"containers",
								"{{cost_container_id}}",
								"workflows",
								"actions"
							]
						},
						"description": "Perform a specified action on an item."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "",
				"type": "string"
			},
			{
				"key": "tokenType",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6461e641-e785-4fdb-9a0a-3657670dfef1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "3d21282b-9014-4f97-84d5-566c463eb454",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}